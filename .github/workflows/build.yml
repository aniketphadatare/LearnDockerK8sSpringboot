name: Build

on:
  push:
    branches: [ "**" ]

jobs:
  build-product-api-service:
    name: Build product-api-service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./product-api-service
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: ./mvnw verify

      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Build and Publish Docker Image
        run: |
          ./mvnw clean package spring-boot:build-image -DskipTests
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/product-api-service

  build-customer-api-service:
    name: Build customer-api-service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./customer_api_service
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: ./mvnw verify

      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Build and Publish Docker Image
        run: |
          ./mvnw clean package spring-boot:build-image -DskipTests
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/customer_api_service
